# API для измерения производительности

Доступ к performance можно получить импортируя модуль `perf_hooks` или используя глобальную переменную `performance`

## performance.now()
Возвращает высокоточное время (High-Resolution Time) с момента запуска сценария [spec](https://w3c.github.io/perf-timing-primer/#high-resolution-time)
Некоторые, для проверки производительности используют `Date.now()`. В спецификации это не рекомендуется делать. Время, полученное с помощью Date не является монотонным. Оно может изменяться не равномерно: уменьшаться в отрицательную сторону, увеличиваться быстрее или медленнее. Подобный эффект оказывается настройками NTP, пользовательскими настройками, дополнительными секундами и пр. [(источник)[https://w3c.github.io/perf-timing-primer/#monotonic-clock]]. Поэтому предпочтительнее использовать performance.

## performance.mark(markName, options)
Определяет контрольную точку и возвращает объект данных. (Свойства объекта)[https://www.w3.org/TR/user-timing/#performancemark]

**Аргументы:**
* `markName` - это название контрольной точки
* `options` - необязательный объект с опциями:
    * `detail` - доп. данные, которые можно получить в возвращаемом объекте, в свойстве detail
    * `startTime` - время выполнения метода (достижения метки)

## performance.measure()